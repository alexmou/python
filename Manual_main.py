import os
import argparse
from telegram_parser import TelegramPrivateChannelParser

def main():
    parser = argparse.ArgumentParser(description="Telegram Private Channel Parser")
    parser.add_argument("channel", help="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ (–±–µ–∑ @)")
    args = parser.parse_args()

    channel = args.channel

    # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ (—Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ Linux/Windows)
    base_dir = os.path.dirname(os.path.abspath(__file__))
    session_dir = os.path.join(base_dir, "cookies")
    data_dir = os.path.join(base_dir, "data")
    os.makedirs(session_dir, exist_ok=True)
    os.makedirs(data_dir, exist_ok=True)

    timestamp_file = os.path.join(data_dir, "timestamps.json")
    output_file = os.path.join(data_dir, f"{channel}.json")

    tg_parser = TelegramPrivateChannelParser(
        channel_name=channel,
        session_dir=session_dir,
        timestamp_file=timestamp_file
    )

    try:
        result = tg_parser.scrape()

        if result:
            tg_parser.save(output_file)
            print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {output_file}")
            print(f"üîç –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(result)}")
        else:
            print("‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")
    except Exception as e:
        print(f"üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
    finally:
        tg_parser.close()

if __name__ == "__main__":
    main()
